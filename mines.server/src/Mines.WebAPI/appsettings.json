{
    "AppOptions": {
        "AppId": "mines",
        "ServerType": "Normal",
        "ServerUrl": "http://192.168.1.128:6602" // ENV_ServerUrl => s_app => appsettings.json
    },

    // #region ******** Common ********
    // 项目信息配置
    "Project": {
        "ProjectId": "mines", //项目标识确保唯一
        "Description": "扫雷Mines-WebAPI", //项目描述
        "MinThreads": 0, // 线程池最小线程数
        "ConsoleLogLevel": "Debug", //LogUtil.ConsoleLogger的日志级别，如果使用Serilog则无效
        "ResponseErrorDetail": true, //是否返回客户端错误详细信息
        "IsDebugEnvironment": true //否测试环境
    },

    // 日志
    "Serilog": {
        "Custom": {
            "RequestLogging": true
        },
        "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File", "Serilog.Sinks.Async" ],
        "MinimumLevel": {
            "Default": "Verbose", // 日志级别限制：Verbose|Debug|Information|Warning|Error|Fatal
            "Override": {
                "Microsoft": "Warning",
                "System": "Warning"
            }
        },
        "WriteTo": {
            "ConsoleSink": {
                "Name": "Console",
                "Args": {
                    "restrictedToMinimumLevel": "Debug", // 日志级别
                    "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
                    "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
                }
            },
            "MySQLSink": {
                "Name": "TinyFxMySQL",
                "Args": {
                    "enabled": true,
                    "restrictedToMinimumLevel": "Error", // 日志级别
                    "connectionString": "default",
                    "tableName": "s_log",
                    "pkType": 1, // 主键类型：0-Guid 1-Identity 2-Snowflake
                    "storeTimestampInUtc": "false",
                    "batchSize": 1 //批量提交数
                }
            },
            "ELKSink": {
                "Name": "Elasticsearch",
                "Args": {
                    "restrictedToMinimumLevel": "Debug", // 日志级别
                    "nodeUris": "http://192.168.1.120:9200", // 多个;分割
                    "indexFormat": "idx-mines-{0:yyyy.MM.dd}", // 索引名称格式化程序。 使用该事件的DateTimeOffset的string.Format在此字符串上运行。
                    "autoRegisterTemplate": true, //默认false。设置为true时，接收器将为Elasticsearch中的日志注册一个索引模板。 该模板经过优化，可以处理serilog事件
                    "autoRegisterTemplateVersion": "ESv7"
                }
            }
        },
        "Enrich": [],
        "Destructure": [],
        "Filter": [],
        "Properties": {
        }
    },

    // 数据库配置
    "Data": {
        "DefaultConnectionStringName": "default", // 默认数据库连接
        "DataRouter": "",
        "InstProvider": "",
        "ConnectionStrings": {
            "default": {
                "ProviderName": "mysql",
                "ConnectionString": "server=192.168.1.120;port=3306;database=ing;user id=root;password=root;sslmode=Disabled;allowuservariables=True",
                "ReadConnectionString": "", // 支持读写分离
                "CommandTimeout": "30",
                "InstProvider": "",
                "OrmMap": "" // 映射此数据库连接的命名空间集合，用;分隔
            },
            "game": {
                "ProviderName": "mysql",
                "ConnectionString": "server=192.168.1.120;port=3306;database=gdb;user id=root;password=root;sslmode=Disabled;allowuservariables=True",
                "ReadConnectionString": "", // 支持读写分离
                "CommandTimeout": "30",
                "InstProvider": "",
                "OrmMap": "Mines.DAL" // 映射此数据库连接的命名空间集合，用;分隔
            }
        }
    },


    // Redis配置
    "Redis": {
        "DefaultConnectionStringName": "default", // 默认redis连接
        "RunNewTaskWhenSync": true, //同步调用时是否使用Task.Run();
        "ConnectionStrings": {
            "default": {
                "ConnectionString": "192.168.1.120:6379,password=root,defaultDatabase=0,keepAlive=-1",
                "SerializeMode": "json",
                "NamespaceMap": "" // 映射此redis连接的命名空间集合，用;分隔
            }
        }
    },

    // 消息队列
    "RabbitMQ": {
        "DefaultConnectionStringName": "default",
        "DefaultSubIdSuffix": null,
        "LogEnabled": true,
        "ConnectionStrings": {
            "default": {
                "ConnectionString": "host=192.168.1.120:5672;username=root;password=root;publisherConfirms=true;timeout=60"
            }
        },
        "MessageAssemblies": [ "Xxyy.MQ.dll" ], //用于注册消息发送
        "ConsumerAssemblies": [ "Mines.BLL.dll" ] //用于自动注册消费类
    },

    // AutoMapper
    "AutoMapper": {
        "Assemblies": [
            "Mines.BLL.dll",
            "Xxyy.Common.dll"
        ]
    },

    // 雪花ID TinyFx.Extensions.IDGenerator
    "IDGenerator": {
        "Enabled": true,
        "UseRedis": true,
        "RedisConnectionStringName": "default",
        "RedisExpireSeconds": 600, //过期时间
        "DataCenterId": 0, // 数据中心ID（范围0-7）
        "WorkerId": 0, //机器码(范围0-1023) UseRedis二选一
        "WorkerIdBits": 10 // 机器码位长度（默认10 => 1023）
    },

    // 随机数设置
    "Random": {
        "DefaultProviderName": "default",
        "Providers": {
            "default": {
                "RandomType": "TinyFx.Randoms.RNGReader,TinyFx",
                "Options": {
                    "Enabled": false,
                    "RouletteSamplingCount": 100000, //抽取采样总数
                    "ShuffleSamplingCount": 100000, //洗牌采样总数
                    "RouletteDeviation": 20, //采样偏差: 抽取 - n取1偏差量，20表示偏差20%
                    "ShuffleDeviation": 20, //采样偏差: 洗牌 - n取size偏差量，20表示偏差20%
                    "CheckInterval": 10000 //监测间隔
                }
            }
        }
    },

    //jwt验证
    "JwtAuth": {
        "Enabled": true, //是否起效
        "DebugToken": null,
        "SignSecret": "ABASDfasfwe@#45346dfg",
        "DynamicSignSecret": false,
        "EncryptSecret": "",
        "Issuer": "tinyfx.com",
        "Audience": "tinyfx.com",
        "ValidateLifetime": false, //是否验证过期
        "ExpireMinutes": 30 // Token过期时间（分钟）,一年525600
    },

    // HttpClientEx配置
    "HttpClient": {
        "Clients": {
            "xxyy.banks": {
                "BaseAddress": "http://192.168.1.128:9008",
                "RequestHeaders": [], //key-value格式
                "Timeout": 20000, // 请求超时时长（毫秒）
                "RetryCount": 3, //重试次数，暂时无效
                "Settings": []
            },
            "xxyy.server": {
                "BaseAddress": "http://192.168.1.128:9009",
                "RequestHeaders": [], //key-value格式
                "Timeout": 20000, // 请求超时时长（毫秒）
                "RetryCount": 3, //重试次数，暂时无效
                "Settings": []
            },
            "partners.server": {
                "BaseAddress": "http://192.168.1.128:9010",
                "RequestHeaders": [], //key-value格式
                "Timeout": 100000, // 请求超时时长（毫秒）
                "RetryCount": 3, //重试次数，暂时无效
                "Settings": []
            }
        }
    },

    // SMS
    "SMS": {
        "DefaultClientName": "default",
        "Clients": {
            "default": {
                "Provider": "tencent",
                "Debug": true,
                "ExpireMinutes": 5,
                "RequestUrl": "https://yun.tim.qq.com/v5/tlssmssvr/sendsms",
                "AppId": "",
                "AppKey": "",
                "TplId": 0,
                "Sign": ""
            }
        }
    },

    // SmtpClientEx 配置
    "Smtp": {
        "DefaultClientName": "default",
        "Clients": {
            "default": {
                "Host": "smtp.163.com",
                "Port": 25,
                "FromAddress": "18910648185@163.com",
                "FromName": "master",
                "UserName": "18910648185@163.com",
                "Password": "ZYKWAVQEEBIVBZZW",
                "UseSsl": false
            },
            "lobby": {
                "Host": "smtpout.secureserver.net",
                "Port": 587, //登录邮箱设置给出的建议是465，实测465会超时，465或587
                "FromAddress": "operate@ingame777.com",
                "FromName": "Lobby",
                "UserName": "operate@ingame777.com",
                "Password": "ING12345678",
                "UseSsl": true
            }
        },
        "SendTos": {
            "bangcasino": {
                "To": [ "jh98net@sina.com" ],
                "CC": [ "" ]
            },
            "lobby": {
                "To": [ "ing_ceshi@163.com" ],
                "CC": [ "" ]
            }
        }
    },
    // #endregion ******** Common ********

    // #region ******** Asp.Net ********

    "AspNet": {
        "UseRequestBuffering": true, // 是否缓存Request.Body，如果不需要读取Body设置为false
        "UseApiActionFilter": true, // 是否使用ApiActionFilter
        "UseModelStateInvalid": true, // 是否使用ValidateModelFilter（屏蔽[ApiController]的自动 400 响应） 
        "UseResponseCompression": true, // 是否启用压缩br,gzip
        "UseApiVersioning": true, // 是否开启版本控制
        "UseSwagger": true, // 是否开启Swagger
        "PathBase": null, //项目基础路径
        "DynamicApiAssemblies": [] // 动态加载的API所在的 xxx.dll
    },


    // 启用Session或者Cookie Identity (TinyFx.AspNet.Configuration.SessionAndCookieSection)
    "SessionAndCookie": {
        "UseSession": false,
        "UseCookieIdentity": true,
        "ApplicationName": "xxyy", // 默认ProjectId，如需跨应用共享session或cookie，需设置相同值
        "Domain": null, // cookie保存的domain，跨域如: .xxyy.com
        "ConnectionStringName": "default", // redis连接字符串名，对应配置：Redis:ConnectionStrings:Name
        "IdleTimeout": 0, //  Session和Cookie过期时间,单位分钟。0:不过期
        "SameSiteMode": "None" //None,Lax
    },

    // api访问过滤
    "ApiAccessFilter": {
        "DefaultFilterName": "default",
        "Filters": {
            "default": {
                "Enabled": true, // 是否启用
                "EnableIntranet": true, // 是否允许所有内网ip
                "AllowIps": "" // 允许ip列表，;分割。
            },
            "quartz": {
                "Enabled": false,
                "AllowIps": "intranet" // 允许ip列表，;分割，intranet允许内网访问。
            }
        }
    },

    // 全局异常处理
    "GlobalException": {
        "HandleType": "Json", // Json,Page,Both
        "JsonHandleUrlKeys": "/api/;", //Json处理方式的Url关键字;分割
        "ErrorHandingPath": "/error", // Page处理方式错误跳转页面
        "exceptionStatusCodeDic": [
            {
                "StatusCode": "401",
                "Message": "未授权的请求"
            },
            {
                "StatusCode": "404",
                "Message": "找不到该页面"
            },
            {
                "StatusCode": "403",
                "Message": "访问被拒绝"
            },
            {
                "StatusCode": "500",
                "Message": "服务器发生意外的错误"
            }
        ]
    },

    // Asp.net core CORS跨域请求配置
    "Cors": {
        "Policies": {
            "default": {
                "Origins": "*", // 允许的来源,分号;分隔（下同）
                "Methods": "*", // 允许的HTTP方法
                "Headers": "*" // 允许的请求标头
            },
            "xxyy": {
                "Origins": "*", // 允许的来源,分号;分隔（下同）
                "Methods": "*", // 允许的HTTP方法
                "Headers": "*" // 允许的请求标头
            }
        },
        "UseCors": {
            "Enabled": true,
            "EnabledReferer": false,
            "DefaultPolicy": "default"
        }
    },
    "AllowedHosts": "*"
}
